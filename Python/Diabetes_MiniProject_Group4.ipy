{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Copy of Unit4:MiniProject_Group4.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/NataliaRussuu/data_analytics_2/blob/main/Copy_of_Unit4_MiniProject_Group4.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "PmNjCuL1WcVK"
      },
      "source": [
        "Group #4:  Ben Pu, Adnaan Syed, Natalia Russu, Carolina Valencia, Kadiatou Diallo, Michelle Orna, Walter Broncano, Bolaji Oke\n",
        "\n",
        "Project goal : to see what is the probability of patients being readmitted within 30 days  without taking in consideration the medications that they are being administered.\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qWSSfpICnASk"
      },
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ],
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nQU8iRqbnASl"
      },
      "source": [
        "\n",
        "#Importing the file\n",
        "location = 'https://raw.githubusercontent.com/niteen11/cuny_lagcc_micro_credential_data_analytics/main/Track%20A/Unit%204%20-%20Machine%20Learning%20and%20Modeling%20Techniques/Dataset/diabetic_data.csv'\n",
        "\n",
        "df = pd.read_csv(location)\n"
      ],
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ultybiC7dCd7"
      },
      "source": [
        "#**Overview**\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 626
        },
        "id": "9fNhrsnmVQ13",
        "outputId": "d05ceb3b-9fc5-4c3e-921d-cd41ae56bd6b"
      },
      "source": [
        "df"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>encounter_id</th>\n",
              "      <th>patient_nbr</th>\n",
              "      <th>race</th>\n",
              "      <th>gender</th>\n",
              "      <th>age</th>\n",
              "      <th>weight</th>\n",
              "      <th>admission_type_id</th>\n",
              "      <th>discharge_disposition_id</th>\n",
              "      <th>admission_source_id</th>\n",
              "      <th>time_in_hospital</th>\n",
              "      <th>payer_code</th>\n",
              "      <th>medical_specialty</th>\n",
              "      <th>num_lab_procedures</th>\n",
              "      <th>num_procedures</th>\n",
              "      <th>num_medications</th>\n",
              "      <th>number_outpatient</th>\n",
              "      <th>number_emergency</th>\n",
              "      <th>number_inpatient</th>\n",
              "      <th>diag_1</th>\n",
              "      <th>diag_2</th>\n",
              "      <th>diag_3</th>\n",
              "      <th>number_diagnoses</th>\n",
              "      <th>max_glu_serum</th>\n",
              "      <th>A1Cresult</th>\n",
              "      <th>metformin</th>\n",
              "      <th>repaglinide</th>\n",
              "      <th>nateglinide</th>\n",
              "      <th>chlorpropamide</th>\n",
              "      <th>glimepiride</th>\n",
              "      <th>acetohexamide</th>\n",
              "      <th>glipizide</th>\n",
              "      <th>glyburide</th>\n",
              "      <th>tolbutamide</th>\n",
              "      <th>pioglitazone</th>\n",
              "      <th>rosiglitazone</th>\n",
              "      <th>acarbose</th>\n",
              "      <th>miglitol</th>\n",
              "      <th>troglitazone</th>\n",
              "      <th>tolazamide</th>\n",
              "      <th>examide</th>\n",
              "      <th>citoglipton</th>\n",
              "      <th>insulin</th>\n",
              "      <th>glyburide-metformin</th>\n",
              "      <th>glipizide-metformin</th>\n",
              "      <th>glimepiride-pioglitazone</th>\n",
              "      <th>metformin-rosiglitazone</th>\n",
              "      <th>metformin-pioglitazone</th>\n",
              "      <th>change</th>\n",
              "      <th>diabetesMed</th>\n",
              "      <th>readmitted</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2278392</td>\n",
              "      <td>8222157</td>\n",
              "      <td>Caucasian</td>\n",
              "      <td>Female</td>\n",
              "      <td>[0-10)</td>\n",
              "      <td>?</td>\n",
              "      <td>6</td>\n",
              "      <td>25</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>?</td>\n",
              "      <td>Pediatrics-Endocrinology</td>\n",
              "      <td>41</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>250.83</td>\n",
              "      <td>?</td>\n",
              "      <td>?</td>\n",
              "      <td>1</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>NO</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>149190</td>\n",
              "      <td>55629189</td>\n",
              "      <td>Caucasian</td>\n",
              "      <td>Female</td>\n",
              "      <td>[10-20)</td>\n",
              "      <td>?</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>?</td>\n",
              "      <td>?</td>\n",
              "      <td>59</td>\n",
              "      <td>0</td>\n",
              "      <td>18</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>276</td>\n",
              "      <td>250.01</td>\n",
              "      <td>255</td>\n",
              "      <td>9</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Up</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Ch</td>\n",
              "      <td>Yes</td>\n",
              "      <td>&gt;30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>64410</td>\n",
              "      <td>86047875</td>\n",
              "      <td>AfricanAmerican</td>\n",
              "      <td>Female</td>\n",
              "      <td>[20-30)</td>\n",
              "      <td>?</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "      <td>2</td>\n",
              "      <td>?</td>\n",
              "      <td>?</td>\n",
              "      <td>11</td>\n",
              "      <td>5</td>\n",
              "      <td>13</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>648</td>\n",
              "      <td>250</td>\n",
              "      <td>V27</td>\n",
              "      <td>6</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Steady</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "      <td>NO</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>500364</td>\n",
              "      <td>82442376</td>\n",
              "      <td>Caucasian</td>\n",
              "      <td>Male</td>\n",
              "      <td>[30-40)</td>\n",
              "      <td>?</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "      <td>2</td>\n",
              "      <td>?</td>\n",
              "      <td>?</td>\n",
              "      <td>44</td>\n",
              "      <td>1</td>\n",
              "      <td>16</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>250.43</td>\n",
              "      <td>403</td>\n",
              "      <td>7</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Up</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Ch</td>\n",
              "      <td>Yes</td>\n",
              "      <td>NO</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>16680</td>\n",
              "      <td>42519267</td>\n",
              "      <td>Caucasian</td>\n",
              "      <td>Male</td>\n",
              "      <td>[40-50)</td>\n",
              "      <td>?</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "      <td>?</td>\n",
              "      <td>?</td>\n",
              "      <td>51</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>197</td>\n",
              "      <td>157</td>\n",
              "      <td>250</td>\n",
              "      <td>5</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Steady</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Steady</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Ch</td>\n",
              "      <td>Yes</td>\n",
              "      <td>NO</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101761</th>\n",
              "      <td>443847548</td>\n",
              "      <td>100162476</td>\n",
              "      <td>AfricanAmerican</td>\n",
              "      <td>Male</td>\n",
              "      <td>[70-80)</td>\n",
              "      <td>?</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>MC</td>\n",
              "      <td>?</td>\n",
              "      <td>51</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>250.13</td>\n",
              "      <td>291</td>\n",
              "      <td>458</td>\n",
              "      <td>9</td>\n",
              "      <td>None</td>\n",
              "      <td>&gt;8</td>\n",
              "      <td>Steady</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Down</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Ch</td>\n",
              "      <td>Yes</td>\n",
              "      <td>&gt;30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101762</th>\n",
              "      <td>443847782</td>\n",
              "      <td>74694222</td>\n",
              "      <td>AfricanAmerican</td>\n",
              "      <td>Female</td>\n",
              "      <td>[80-90)</td>\n",
              "      <td>?</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>MC</td>\n",
              "      <td>?</td>\n",
              "      <td>33</td>\n",
              "      <td>3</td>\n",
              "      <td>18</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>560</td>\n",
              "      <td>276</td>\n",
              "      <td>787</td>\n",
              "      <td>9</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Steady</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "      <td>NO</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101763</th>\n",
              "      <td>443854148</td>\n",
              "      <td>41088789</td>\n",
              "      <td>Caucasian</td>\n",
              "      <td>Male</td>\n",
              "      <td>[70-80)</td>\n",
              "      <td>?</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "      <td>MC</td>\n",
              "      <td>?</td>\n",
              "      <td>53</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>38</td>\n",
              "      <td>590</td>\n",
              "      <td>296</td>\n",
              "      <td>13</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>Steady</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Down</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Ch</td>\n",
              "      <td>Yes</td>\n",
              "      <td>NO</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101764</th>\n",
              "      <td>443857166</td>\n",
              "      <td>31693671</td>\n",
              "      <td>Caucasian</td>\n",
              "      <td>Female</td>\n",
              "      <td>[80-90)</td>\n",
              "      <td>?</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>7</td>\n",
              "      <td>10</td>\n",
              "      <td>MC</td>\n",
              "      <td>Surgery-General</td>\n",
              "      <td>45</td>\n",
              "      <td>2</td>\n",
              "      <td>21</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>996</td>\n",
              "      <td>285</td>\n",
              "      <td>998</td>\n",
              "      <td>9</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Steady</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Steady</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Up</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Ch</td>\n",
              "      <td>Yes</td>\n",
              "      <td>NO</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101765</th>\n",
              "      <td>443867222</td>\n",
              "      <td>175429310</td>\n",
              "      <td>Caucasian</td>\n",
              "      <td>Male</td>\n",
              "      <td>[70-80)</td>\n",
              "      <td>?</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "      <td>6</td>\n",
              "      <td>?</td>\n",
              "      <td>?</td>\n",
              "      <td>13</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>530</td>\n",
              "      <td>530</td>\n",
              "      <td>787</td>\n",
              "      <td>9</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>NO</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>101766 rows × 50 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        encounter_id  patient_nbr  ... diabetesMed readmitted\n",
              "0            2278392      8222157  ...          No         NO\n",
              "1             149190     55629189  ...         Yes        >30\n",
              "2              64410     86047875  ...         Yes         NO\n",
              "3             500364     82442376  ...         Yes         NO\n",
              "4              16680     42519267  ...         Yes         NO\n",
              "...              ...          ...  ...         ...        ...\n",
              "101761     443847548    100162476  ...         Yes        >30\n",
              "101762     443847782     74694222  ...         Yes         NO\n",
              "101763     443854148     41088789  ...         Yes         NO\n",
              "101764     443857166     31693671  ...         Yes         NO\n",
              "101765     443867222    175429310  ...          No         NO\n",
              "\n",
              "[101766 rows x 50 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 326
        },
        "id": "moHi5-x6Yv-Z",
        "outputId": "e54f6976-abb9-4669-ccad-dd51f5608691"
      },
      "source": [
        "df.tail()"
      ],
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>encounter_id</th>\n",
              "      <th>patient_nbr</th>\n",
              "      <th>race</th>\n",
              "      <th>gender</th>\n",
              "      <th>age</th>\n",
              "      <th>weight</th>\n",
              "      <th>admission_type_id</th>\n",
              "      <th>discharge_disposition_id</th>\n",
              "      <th>admission_source_id</th>\n",
              "      <th>time_in_hospital</th>\n",
              "      <th>payer_code</th>\n",
              "      <th>medical_specialty</th>\n",
              "      <th>num_lab_procedures</th>\n",
              "      <th>num_procedures</th>\n",
              "      <th>num_medications</th>\n",
              "      <th>number_outpatient</th>\n",
              "      <th>number_emergency</th>\n",
              "      <th>number_inpatient</th>\n",
              "      <th>diag_1</th>\n",
              "      <th>diag_2</th>\n",
              "      <th>diag_3</th>\n",
              "      <th>number_diagnoses</th>\n",
              "      <th>max_glu_serum</th>\n",
              "      <th>A1Cresult</th>\n",
              "      <th>metformin</th>\n",
              "      <th>repaglinide</th>\n",
              "      <th>nateglinide</th>\n",
              "      <th>chlorpropamide</th>\n",
              "      <th>glimepiride</th>\n",
              "      <th>acetohexamide</th>\n",
              "      <th>glipizide</th>\n",
              "      <th>glyburide</th>\n",
              "      <th>tolbutamide</th>\n",
              "      <th>pioglitazone</th>\n",
              "      <th>rosiglitazone</th>\n",
              "      <th>acarbose</th>\n",
              "      <th>miglitol</th>\n",
              "      <th>troglitazone</th>\n",
              "      <th>tolazamide</th>\n",
              "      <th>examide</th>\n",
              "      <th>citoglipton</th>\n",
              "      <th>insulin</th>\n",
              "      <th>glyburide-metformin</th>\n",
              "      <th>glipizide-metformin</th>\n",
              "      <th>glimepiride-pioglitazone</th>\n",
              "      <th>metformin-rosiglitazone</th>\n",
              "      <th>metformin-pioglitazone</th>\n",
              "      <th>change</th>\n",
              "      <th>diabetesMed</th>\n",
              "      <th>readmitted</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>101761</th>\n",
              "      <td>443847548</td>\n",
              "      <td>100162476</td>\n",
              "      <td>AfricanAmerican</td>\n",
              "      <td>Male</td>\n",
              "      <td>[70-80)</td>\n",
              "      <td>?</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>MC</td>\n",
              "      <td>?</td>\n",
              "      <td>51</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>250.13</td>\n",
              "      <td>291</td>\n",
              "      <td>458</td>\n",
              "      <td>9</td>\n",
              "      <td>None</td>\n",
              "      <td>&gt;8</td>\n",
              "      <td>Steady</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Down</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Ch</td>\n",
              "      <td>Yes</td>\n",
              "      <td>&gt;30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101762</th>\n",
              "      <td>443847782</td>\n",
              "      <td>74694222</td>\n",
              "      <td>AfricanAmerican</td>\n",
              "      <td>Female</td>\n",
              "      <td>[80-90)</td>\n",
              "      <td>?</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>MC</td>\n",
              "      <td>?</td>\n",
              "      <td>33</td>\n",
              "      <td>3</td>\n",
              "      <td>18</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>560</td>\n",
              "      <td>276</td>\n",
              "      <td>787</td>\n",
              "      <td>9</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Steady</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "      <td>NO</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101763</th>\n",
              "      <td>443854148</td>\n",
              "      <td>41088789</td>\n",
              "      <td>Caucasian</td>\n",
              "      <td>Male</td>\n",
              "      <td>[70-80)</td>\n",
              "      <td>?</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "      <td>MC</td>\n",
              "      <td>?</td>\n",
              "      <td>53</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>38</td>\n",
              "      <td>590</td>\n",
              "      <td>296</td>\n",
              "      <td>13</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>Steady</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Down</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Ch</td>\n",
              "      <td>Yes</td>\n",
              "      <td>NO</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101764</th>\n",
              "      <td>443857166</td>\n",
              "      <td>31693671</td>\n",
              "      <td>Caucasian</td>\n",
              "      <td>Female</td>\n",
              "      <td>[80-90)</td>\n",
              "      <td>?</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>7</td>\n",
              "      <td>10</td>\n",
              "      <td>MC</td>\n",
              "      <td>Surgery-General</td>\n",
              "      <td>45</td>\n",
              "      <td>2</td>\n",
              "      <td>21</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>996</td>\n",
              "      <td>285</td>\n",
              "      <td>998</td>\n",
              "      <td>9</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Steady</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Steady</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Up</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Ch</td>\n",
              "      <td>Yes</td>\n",
              "      <td>NO</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101765</th>\n",
              "      <td>443867222</td>\n",
              "      <td>175429310</td>\n",
              "      <td>Caucasian</td>\n",
              "      <td>Male</td>\n",
              "      <td>[70-80)</td>\n",
              "      <td>?</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "      <td>6</td>\n",
              "      <td>?</td>\n",
              "      <td>?</td>\n",
              "      <td>13</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>530</td>\n",
              "      <td>530</td>\n",
              "      <td>787</td>\n",
              "      <td>9</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>NO</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "        encounter_id  patient_nbr  ... diabetesMed readmitted\n",
              "101761     443847548    100162476  ...         Yes        >30\n",
              "101762     443847782     74694222  ...         Yes         NO\n",
              "101763     443854148     41088789  ...         Yes         NO\n",
              "101764     443857166     31693671  ...         Yes         NO\n",
              "101765     443867222    175429310  ...          No         NO\n",
              "\n",
              "[5 rows x 50 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 317
        },
        "id": "TUOW9ggyYjV3",
        "outputId": "dc7fc68b-f748-4242-8131-a3e72d35e04b"
      },
      "source": [
        "df.describe()"
      ],
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>encounter_id</th>\n",
              "      <th>patient_nbr</th>\n",
              "      <th>admission_type_id</th>\n",
              "      <th>discharge_disposition_id</th>\n",
              "      <th>admission_source_id</th>\n",
              "      <th>time_in_hospital</th>\n",
              "      <th>num_lab_procedures</th>\n",
              "      <th>num_procedures</th>\n",
              "      <th>num_medications</th>\n",
              "      <th>number_outpatient</th>\n",
              "      <th>number_emergency</th>\n",
              "      <th>number_inpatient</th>\n",
              "      <th>number_diagnoses</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>1.017660e+05</td>\n",
              "      <td>1.017660e+05</td>\n",
              "      <td>101766.000000</td>\n",
              "      <td>101766.000000</td>\n",
              "      <td>101766.000000</td>\n",
              "      <td>101766.000000</td>\n",
              "      <td>101766.000000</td>\n",
              "      <td>101766.000000</td>\n",
              "      <td>101766.000000</td>\n",
              "      <td>101766.000000</td>\n",
              "      <td>101766.000000</td>\n",
              "      <td>101766.000000</td>\n",
              "      <td>101766.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>1.652016e+08</td>\n",
              "      <td>5.433040e+07</td>\n",
              "      <td>2.024006</td>\n",
              "      <td>3.715642</td>\n",
              "      <td>5.754437</td>\n",
              "      <td>4.395987</td>\n",
              "      <td>43.095641</td>\n",
              "      <td>1.339730</td>\n",
              "      <td>16.021844</td>\n",
              "      <td>0.369357</td>\n",
              "      <td>0.197836</td>\n",
              "      <td>0.635566</td>\n",
              "      <td>7.422607</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>1.026403e+08</td>\n",
              "      <td>3.869636e+07</td>\n",
              "      <td>1.445403</td>\n",
              "      <td>5.280166</td>\n",
              "      <td>4.064081</td>\n",
              "      <td>2.985108</td>\n",
              "      <td>19.674362</td>\n",
              "      <td>1.705807</td>\n",
              "      <td>8.127566</td>\n",
              "      <td>1.267265</td>\n",
              "      <td>0.930472</td>\n",
              "      <td>1.262863</td>\n",
              "      <td>1.933600</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.252200e+04</td>\n",
              "      <td>1.350000e+02</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>8.496119e+07</td>\n",
              "      <td>2.341322e+07</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>31.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>10.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>6.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>1.523890e+08</td>\n",
              "      <td>4.550514e+07</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>7.000000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>44.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>15.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>8.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>2.302709e+08</td>\n",
              "      <td>8.754595e+07</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>7.000000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>57.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>20.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>9.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>4.438672e+08</td>\n",
              "      <td>1.895026e+08</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>28.000000</td>\n",
              "      <td>25.000000</td>\n",
              "      <td>14.000000</td>\n",
              "      <td>132.000000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>81.000000</td>\n",
              "      <td>42.000000</td>\n",
              "      <td>76.000000</td>\n",
              "      <td>21.000000</td>\n",
              "      <td>16.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "       encounter_id   patient_nbr  ...  number_inpatient  number_diagnoses\n",
              "count  1.017660e+05  1.017660e+05  ...     101766.000000     101766.000000\n",
              "mean   1.652016e+08  5.433040e+07  ...          0.635566          7.422607\n",
              "std    1.026403e+08  3.869636e+07  ...          1.262863          1.933600\n",
              "min    1.252200e+04  1.350000e+02  ...          0.000000          1.000000\n",
              "25%    8.496119e+07  2.341322e+07  ...          0.000000          6.000000\n",
              "50%    1.523890e+08  4.550514e+07  ...          0.000000          8.000000\n",
              "75%    2.302709e+08  8.754595e+07  ...          1.000000          9.000000\n",
              "max    4.438672e+08  1.895026e+08  ...         21.000000         16.000000\n",
              "\n",
              "[8 rows x 13 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iTagL1H_R5pF",
        "outputId": "eb424f74-f9f1-4d9c-9ee2-64ee4ac43d05"
      },
      "source": [
        "df.shape"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(101766, 50)"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "H0w0wiRTQtOV"
      },
      "source": [
        "#Replacing all unknown data with null values\n",
        "df.replace(\"?\", np.nan, inplace=True )\n",
        "df.replace(\"Unknown/Invalid\", np.nan, inplace=True )\n",
        "df['admission_type_id'].replace(6,np.nan,inplace=True)\n",
        "df['discharge_disposition_id'].replace(18, np.nan, inplace=True)\n",
        "df['admission_source_id'].replace(17, np.nan, inplace=True)"
      ],
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MwWLYnryRlMI",
        "outputId": "133a6d1e-56b2-4c3e-b8b8-cf337e775e92"
      },
      "source": [
        "df.isnull().sum()"
      ],
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "encounter_id                    0\n",
              "patient_nbr                     0\n",
              "race                         2273\n",
              "gender                          3\n",
              "age                             0\n",
              "weight                      98569\n",
              "admission_type_id            5291\n",
              "discharge_disposition_id     3691\n",
              "admission_source_id          6781\n",
              "time_in_hospital                0\n",
              "payer_code                  40256\n",
              "medical_specialty           49949\n",
              "num_lab_procedures              0\n",
              "num_procedures                  0\n",
              "num_medications                 0\n",
              "number_outpatient               0\n",
              "number_emergency                0\n",
              "number_inpatient                0\n",
              "diag_1                         21\n",
              "diag_2                        358\n",
              "diag_3                       1423\n",
              "number_diagnoses                0\n",
              "max_glu_serum                   0\n",
              "A1Cresult                       0\n",
              "metformin                       0\n",
              "repaglinide                     0\n",
              "nateglinide                     0\n",
              "chlorpropamide                  0\n",
              "glimepiride                     0\n",
              "acetohexamide                   0\n",
              "glipizide                       0\n",
              "glyburide                       0\n",
              "tolbutamide                     0\n",
              "pioglitazone                    0\n",
              "rosiglitazone                   0\n",
              "acarbose                        0\n",
              "miglitol                        0\n",
              "troglitazone                    0\n",
              "tolazamide                      0\n",
              "examide                         0\n",
              "citoglipton                     0\n",
              "insulin                         0\n",
              "glyburide-metformin             0\n",
              "glipizide-metformin             0\n",
              "glimepiride-pioglitazone        0\n",
              "metformin-rosiglitazone         0\n",
              "metformin-pioglitazone          0\n",
              "change                          0\n",
              "diabetesMed                     0\n",
              "readmitted                      0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 373
        },
        "id": "c1jO7ABSQx5z",
        "outputId": "98411593-730d-4cdb-d420-799ea5e16717"
      },
      "source": [
        "plt.figure(figsize=(10, 5))\n",
        "missing = pd.DataFrame({'column':df.iloc[:, :-35].columns, 'na_percent':df.iloc[:, :-35].isnull().sum()/len(df)*100})\n",
        "missing.sort_values('na_percent', ascending=False, inplace=True)\n",
        "plt.bar(missing['column'], missing['na_percent'])\n",
        "plt.ylabel('%')\n",
        "plt.xticks(rotation=85)\n",
        "plt.title('NaN Data', color=\"purple\")"
      ],
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'NaN Data')"
            ]
          },
          "metadata": {},
          "execution_count": 47
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 720x360 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "LbRhwoYegQ7g"
      },
      "source": [
        "#**Data Exploration (EDA)**"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Vpob0JKIrYwd"
      },
      "source": [
        "1. By gender, amount of drug admininstered\n",
        "2. Diabetes by age group,gender, race\n",
        "3. The frequency of each drug type administered\n",
        "\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WJN2VYo4qFb5",
        "outputId": "d26f82c4-4cd4-4230-dc8d-91bd0772e32a"
      },
      "source": [
        "df['gender'].value_counts()"
      ],
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Female    54708\n",
              "Male      47055\n",
              "Name: gender, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dEUAb96OqOXo",
        "outputId": "b3c747e8-4007-4a77-81b8-8c834ef66f77"
      },
      "source": [
        "df['race'].value_counts()"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Caucasian          76099\n",
              "AfricanAmerican    19210\n",
              "Hispanic            2037\n",
              "Other               1506\n",
              "Asian                641\n",
              "Name: race, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "to3FUecqqR3M",
        "outputId": "05d0d708-56a3-4806-d08d-a5be0cc899fb"
      },
      "source": [
        "df['age'].value_counts()"
      ],
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[70-80)     26068\n",
              "[60-70)     22483\n",
              "[50-60)     17256\n",
              "[80-90)     17197\n",
              "[40-50)      9685\n",
              "[30-40)      3775\n",
              "[90-100)     2793\n",
              "[20-30)      1657\n",
              "[10-20)       691\n",
              "[0-10)        161\n",
              "Name: age, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6WXs3IdWhi8a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 142
        },
        "outputId": "6dd7d0db-c38e-415e-d5b1-6da3ba690fc3"
      },
      "source": [
        "df1 = df[['gender','num_medications']]\n",
        "df1.groupby(['gender']).sum()\n",
        "#This shows that females have a higher sum of medications compared to males"
      ],
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>num_medications</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>gender</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Female</th>\n",
              "      <td>885607</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Male</th>\n",
              "      <td>744823</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "        num_medications\n",
              "gender                 \n",
              "Female           885607\n",
              "Male             744823"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kSV7pxU0h9uB",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 142
        },
        "outputId": "f505e2f1-a28b-4bb9-9f5b-05d5522ebab8"
      },
      "source": [
        "df1.groupby(['gender']).mean()  "
      ],
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>num_medications</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>gender</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Female</th>\n",
              "      <td>16.187888</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Male</th>\n",
              "      <td>15.828775</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "        num_medications\n",
              "gender                 \n",
              "Female        16.187888\n",
              "Male          15.828775"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wvFZC7lkiyhe",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "outputId": "1ca29911-ae27-462b-fab2-b0fd50d973df"
      },
      "source": [
        "#Visualizing the difference in num of medications between males and females    \n",
        "sns.countplot(x=df1['gender'], data=df1)\n"
      ],
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f907dd0eb50>"
            ]
          },
          "metadata": {},
          "execution_count": 15
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XNgMzUzkjKC6"
      },
      "source": [
        "df.loc[:, 'diabetesMed'] = df.loc[:, 'diabetesMed'].replace(\n",
        "    {\n",
        "        'No': 0,\n",
        "       'Yes': 1\n",
        "    }\n",
        ")"
      ],
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UlfSBG9Zhl0P",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "outputId": "27f527bc-630e-4c52-9aa2-67d512eccc3f"
      },
      "source": [
        "#Diabetes Medication in relation to age, gender, and race\n",
        "df2 = df[['diabetesMed','age','gender','race']]\n",
        "df2"
      ],
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>diabetesMed</th>\n",
              "      <th>age</th>\n",
              "      <th>gender</th>\n",
              "      <th>race</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>[0-10)</td>\n",
              "      <td>Female</td>\n",
              "      <td>Caucasian</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>[10-20)</td>\n",
              "      <td>Female</td>\n",
              "      <td>Caucasian</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1</td>\n",
              "      <td>[20-30)</td>\n",
              "      <td>Female</td>\n",
              "      <td>AfricanAmerican</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>[30-40)</td>\n",
              "      <td>Male</td>\n",
              "      <td>Caucasian</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>[40-50)</td>\n",
              "      <td>Male</td>\n",
              "      <td>Caucasian</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101761</th>\n",
              "      <td>1</td>\n",
              "      <td>[70-80)</td>\n",
              "      <td>Male</td>\n",
              "      <td>AfricanAmerican</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101762</th>\n",
              "      <td>1</td>\n",
              "      <td>[80-90)</td>\n",
              "      <td>Female</td>\n",
              "      <td>AfricanAmerican</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101763</th>\n",
              "      <td>1</td>\n",
              "      <td>[70-80)</td>\n",
              "      <td>Male</td>\n",
              "      <td>Caucasian</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101764</th>\n",
              "      <td>1</td>\n",
              "      <td>[80-90)</td>\n",
              "      <td>Female</td>\n",
              "      <td>Caucasian</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101765</th>\n",
              "      <td>0</td>\n",
              "      <td>[70-80)</td>\n",
              "      <td>Male</td>\n",
              "      <td>Caucasian</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>101766 rows × 4 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        diabetesMed      age  gender             race\n",
              "0                 0   [0-10)  Female        Caucasian\n",
              "1                 1  [10-20)  Female        Caucasian\n",
              "2                 1  [20-30)  Female  AfricanAmerican\n",
              "3                 1  [30-40)    Male        Caucasian\n",
              "4                 1  [40-50)    Male        Caucasian\n",
              "...             ...      ...     ...              ...\n",
              "101761            1  [70-80)    Male  AfricanAmerican\n",
              "101762            1  [80-90)  Female  AfricanAmerican\n",
              "101763            1  [70-80)    Male        Caucasian\n",
              "101764            1  [80-90)  Female        Caucasian\n",
              "101765            0  [70-80)    Male        Caucasian\n",
              "\n",
              "[101766 rows x 4 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "id": "yoAh6leoOOT0",
        "outputId": "cf5307f3-d2e1-42c5-a96c-fb682c716dd6"
      },
      "source": [
        "#Diabetes Medication in relation to age\n",
        "#This shows that people who are older tend to take more diabetes medication\n",
        "sns.countplot(x='age', data=df2, hue='diabetesMed', palette='magma')"
      ],
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f907e1df990>"
            ]
          },
          "metadata": {},
          "execution_count": 18
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "D3ZN3LRVmoSp",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "outputId": "1de84896-c4bd-4552-be9f-3037fc1a1366"
      },
      "source": [
        "#Females take more diabetes medication than males, but that might be due to \n",
        "#the higher amount of females in the data\n",
        "sns.countplot(x='gender', data=df2, hue='diabetesMed', palette='Set2')"
      ],
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f907d9d5710>"
            ]
          },
          "metadata": {},
          "execution_count": 48
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "id": "ApEJ8jSpO57n",
        "outputId": "95d9884c-4609-4a12-a6dc-dbd2e92d5be3"
      },
      "source": [
        "#Caucasions have more diabetes medication compared to other races, but that may\n",
        "#be due to the fact that there are more caucasion patients than other patients\n",
        "sns.countplot(x='race', data=df2, hue='diabetesMed', palette='pastel')"
      ],
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f907db2aa10>"
            ]
          },
          "metadata": {},
          "execution_count": 20
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "8cLTm35nPr_y",
        "outputId": "a7d6337f-e32f-46f2-d806-71461ce0dcbb"
      },
      "source": [
        "#Graph shows the readmittance rate between males and females\n",
        "sns.countplot(x='gender', data=df, hue='readmitted')\n",
        "plt.title('Readmitted Within 30 Days', color=\"purple\")\n",
        "plt.show()"
      ],
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cFst80LrPrvp",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "outputId": "8ec2fa6b-f939-47d6-c362-24262bf9f806"
      },
      "source": [
        "#Graph shows the readmittance rate between races\n",
        "sns.countplot(x='race', data=df, hue='readmitted')\n",
        "plt.title('Readmitted Within 30 Days', color=\"purple\")\n",
        "plt.show()"
      ],
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "wCNVlDklrBXB",
        "outputId": "d0cb5eb2-dd11-46fe-908e-92cfa504a29d"
      },
      "source": [
        "#Graph shows the readmittance rate between ages\n",
        "sns.countplot(x='age', data=df, hue='readmitted')\n",
        "plt.title('Readmitted Within 30 Days', color=\"purple\")\n",
        "plt.show()"
      ],
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "wpfjM8ypPz7L"
      },
      "source": [
        "#**Data Preparation (Wrangling/Cleaning)**"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "BozdI6k9rYwc"
      },
      "source": [
        "**OUR GOAL IS TO SEE IF WE CAN PREDICT IF THE PATIENT IS GOING TO BE READMITTED WITHOUT KNOWING ANY OF THE DRUGS THEY ARE TAKING**\n",
        "\n",
        "Want to get rid of null values such as weight, medical specialties, paycode, etc.\n",
        "\n",
        "Want to keep race, gender, age, and other important data"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QNFXftRmsiov"
      },
      "source": [
        "#Dropping all unneccesary columns\n",
        "df.drop(['patient_nbr','encounter_id','weight','payer_code','medical_specialty','metformin','repaglinide','nateglinide','chlorpropamide','glimepiride',\n",
        "                     'acetohexamide','glipizide','glyburide','tolbutamide','pioglitazone','rosiglitazone','max_glu_serum','A1Cresult',\n",
        "                     'acarbose','miglitol','troglitazone','tolazamide','examide','citoglipton','glyburide-metformin','diag_1','diag_2','diag_3',\n",
        "                     'glipizide-metformin','glimepiride-pioglitazone','metformin-rosiglitazone','metformin-pioglitazone','insulin'],axis=1, inplace=True)"
      ],
      "execution_count": 24,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3IQuilGStsUC"
      },
      "source": [
        "#changing all non-numeric columns to numerics so we can process it in the model\n",
        "df.race.replace({'Caucasian':1,'AfricanAmerican':2, 'Hispanic':3, 'Asian':4,'Other':5, np.nan:0},inplace=True)\n",
        "df.gender.replace({'Female': 0, 'Male': 1}, inplace=True)\n",
        "df.readmitted.replace({'NO': 0, '>30': 0, '<30': 1}, inplace=True)\n",
        "df.age.replace({ '[0-10)':0, '[10-20)':0, '[20-30)':0, '[30-40)':1, '[40-50)':1, '[50-60)':1, '[60-70)':2, '[70-80)':2, '[80-90)':2, '[90-100)':2}, inplace=True)\n",
        "df.change.replace({'No':0,'Ch':1},inplace=True)"
      ],
      "execution_count": 25,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 439
        },
        "id": "XIQHo83Eto5s",
        "outputId": "60b9293f-05d6-4472-9d86-6083cfb34874"
      },
      "source": [
        "df"
      ],
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>race</th>\n",
              "      <th>gender</th>\n",
              "      <th>age</th>\n",
              "      <th>admission_type_id</th>\n",
              "      <th>discharge_disposition_id</th>\n",
              "      <th>admission_source_id</th>\n",
              "      <th>time_in_hospital</th>\n",
              "      <th>num_lab_procedures</th>\n",
              "      <th>num_procedures</th>\n",
              "      <th>num_medications</th>\n",
              "      <th>number_outpatient</th>\n",
              "      <th>number_emergency</th>\n",
              "      <th>number_inpatient</th>\n",
              "      <th>number_diagnoses</th>\n",
              "      <th>change</th>\n",
              "      <th>diabetesMed</th>\n",
              "      <th>readmitted</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>25.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>41</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>7.0</td>\n",
              "      <td>3</td>\n",
              "      <td>59</td>\n",
              "      <td>0</td>\n",
              "      <td>18</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>7.0</td>\n",
              "      <td>2</td>\n",
              "      <td>11</td>\n",
              "      <td>5</td>\n",
              "      <td>13</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>7.0</td>\n",
              "      <td>2</td>\n",
              "      <td>44</td>\n",
              "      <td>1</td>\n",
              "      <td>16</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>7.0</td>\n",
              "      <td>1</td>\n",
              "      <td>51</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101761</th>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>7.0</td>\n",
              "      <td>3</td>\n",
              "      <td>51</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101762</th>\n",
              "      <td>2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>5</td>\n",
              "      <td>33</td>\n",
              "      <td>3</td>\n",
              "      <td>18</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101763</th>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>7.0</td>\n",
              "      <td>1</td>\n",
              "      <td>53</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>13</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101764</th>\n",
              "      <td>1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>7.0</td>\n",
              "      <td>10</td>\n",
              "      <td>45</td>\n",
              "      <td>2</td>\n",
              "      <td>21</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101765</th>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>7.0</td>\n",
              "      <td>6</td>\n",
              "      <td>13</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>101766 rows × 17 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        race  gender  age  ...  change  diabetesMed  readmitted\n",
              "0          1     0.0    0  ...       0            0           0\n",
              "1          1     0.0    0  ...       1            1           0\n",
              "2          2     0.0    0  ...       0            1           0\n",
              "3          1     1.0    1  ...       1            1           0\n",
              "4          1     1.0    1  ...       1            1           0\n",
              "...      ...     ...  ...  ...     ...          ...         ...\n",
              "101761     2     1.0    2  ...       1            1           0\n",
              "101762     2     0.0    2  ...       0            1           0\n",
              "101763     1     1.0    2  ...       1            1           0\n",
              "101764     1     0.0    2  ...       1            1           0\n",
              "101765     1     1.0    2  ...       0            0           0\n",
              "\n",
              "[101766 rows x 17 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1CVedqv8uH5b",
        "outputId": "16e41b97-4d07-4735-a589-3e0010af0cee"
      },
      "source": [
        "df.isnull().sum()"
      ],
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "race                           0\n",
              "gender                         3\n",
              "age                            0\n",
              "admission_type_id           5291\n",
              "discharge_disposition_id    3691\n",
              "admission_source_id         6781\n",
              "time_in_hospital               0\n",
              "num_lab_procedures             0\n",
              "num_procedures                 0\n",
              "num_medications                0\n",
              "number_outpatient              0\n",
              "number_emergency               0\n",
              "number_inpatient               0\n",
              "number_diagnoses               0\n",
              "change                         0\n",
              "diabetesMed                    0\n",
              "readmitted                     0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hBScVBNuuLrQ"
      },
      "source": [
        "#will also drop all null values becuase they are insignificant because we have alot of data left\n",
        "df.dropna(inplace=True)"
      ],
      "execution_count": 28,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "q5hZXnywuWQa",
        "outputId": "37c53a07-88d3-4d3c-f617-97060e160b14"
      },
      "source": [
        "df.shape"
      ],
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(88969, 17)"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "HX56pUaBIsC3"
      },
      "source": [
        "#**Models**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aFhMjNtKTSpW"
      },
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.metrics import classification_report, confusion_matrix\n",
        "from sklearn import metrics\n",
        "y = df['diabetesMed']\n",
        "X= df.drop('diabetesMed', axis=1)\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)"
      ],
      "execution_count": 30,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uO2E9P3dTVr7",
        "outputId": "9ab48411-52b2-43e1-a58f-c824e13c95e8"
      },
      "source": [
        "X_train.shape, X_test.shape, y_train.shape, y_test.shape"
      ],
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "((71175, 16), (17794, 16), (71175,), (17794,))"
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "LEeuH92du_yy"
      },
      "source": [
        "##Logistic Regression Model"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kdu6yw4FLncb"
      },
      "source": [
        "# Import LogisticRegression from sklearn's linear_model\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "\n",
        "# Create an instance of LogisticRegression as log\n",
        "log = LogisticRegression(solver='liblinear',random_state=88)"
      ],
      "execution_count": 32,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FXFgDP6avUZP",
        "outputId": "43f2630b-640d-4588-fd55-2bbb06fe2e25"
      },
      "source": [
        "log.fit(X_train, y_train)"
      ],
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,\n",
              "                   intercept_scaling=1, l1_ratio=None, max_iter=100,\n",
              "                   multi_class='auto', n_jobs=None, penalty='l2',\n",
              "                   random_state=88, solver='liblinear', tol=0.0001, verbose=0,\n",
              "                   warm_start=False)"
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AT7iFPl3vlZc"
      },
      "source": [
        "logPredict = log.predict(X_test)"
      ],
      "execution_count": 34,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XPKSITmNwddT",
        "outputId": "aceeb8ba-fcf8-4fd4-d648-fdf19c1690ea"
      },
      "source": [
        "print(\"Accuracy:\",metrics.accuracy_score(y_test, logPredict))"
      ],
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Accuracy: 0.7888052152410925\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fAaB_-FF9he0",
        "outputId": "d1f4eb94-6057-4938-9a94-c5bc55bbcec1"
      },
      "source": [
        "print(classification_report(y_test,logPredict))\n"
      ],
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.57      0.17      0.26      3922\n",
            "           1       0.80      0.96      0.88     13872\n",
            "\n",
            "    accuracy                           0.79     17794\n",
            "   macro avg       0.69      0.57      0.57     17794\n",
            "weighted avg       0.75      0.79      0.74     17794\n",
            "\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GVwM4uAN9uC7",
        "outputId": "d84176d6-dce0-46cd-adf0-20e0803950f1"
      },
      "source": [
        "print(confusion_matrix(y_test, logPredict))\n"
      ],
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[  658  3264]\n",
            " [  494 13378]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 520
        },
        "id": "GufBOs4NwTio",
        "outputId": "9e687257-f8a9-40c1-9ceb-4a99a0859e62"
      },
      "source": [
        "plt.figure(figsize=(9,9))\n",
        "sns.heatmap(confusion_matrix(y_test, logPredict), annot=True, fmt=\".3f\", linewidths=.5, square = True, cmap = 'Blues_r');\n",
        "plt.ylabel('Actual label');\n",
        "plt.xlabel('Predicted label');\n",
        "all_sample_title = 'Accuracy Score: {0}'.format(log.score(X_test, y_test))\n",
        "plt.title(all_sample_title, size = 18);"
      ],
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 648x648 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "To4Nw4OAwocH"
      },
      "source": [
        "##KNN Model\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nplWICA4w701"
      },
      "source": [
        "from sklearn.neighbors import KNeighborsClassifier\n"
      ],
      "execution_count": 39,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 456
        },
        "id": "lPYH521-wy5M",
        "outputId": "5023ecde-ce60-4de7-9965-8518c3a1ba69"
      },
      "source": [
        "score =[]\n",
        "\n",
        "# Run for k from 1 to 39\n",
        "# Pssing the value of K to KNeighborsClassifier\n",
        "# and calculating the acuracy score (y_test vs y_predect)\n",
        "for i in range(1,20,4):\n",
        "  knn = KNeighborsClassifier(n_neighbors=i) \n",
        "  knn.fit(X_train, y_train)\n",
        "  y_pred = knn.predict(X_test)\n",
        "  score.append(metrics.accuracy_score(y_test,y_pred))\n",
        "  #append() appends a passed obj (matrics.accuracy) into the existing list.(score)\n",
        "\n",
        "print(str(score)+\"\\n\\n\")\n",
        "\n",
        "\n",
        "plt.figure(figsize=(15,6))\n",
        "plt.plot(range(1,20,4),score, color='blue',linestyle='dashed',marker='o',markerfacecolor='red', markersize=10)\n",
        "plt.xlabel('Value of K for KNN')\n",
        "plt.ylabel('Testing Accuracy')"
      ],
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[0.7079352590760931, 0.7639091828706306, 0.7766662920085422, 0.780824997190064, 0.7843093177475553]\n",
            "\n",
            "\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'Testing Accuracy')"
            ]
          },
          "metadata": {},
          "execution_count": 40
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1080x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "X7bUVCfuxL9J",
        "outputId": "d1227e8c-14d3-45f9-f00d-4f64d657ffc9"
      },
      "source": [
        "from sklearn.neighbors import KNeighborsClassifier\n",
        "\n",
        "knn = KNeighborsClassifier(n_neighbors=9)\n",
        "knn.fit(X_train, y_train)\n",
        "knn_pred = knn.predict(X_test)\n",
        "print(\"Accuracy:\",metrics.accuracy_score(y_test, knn_pred))"
      ],
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Accuracy: 0.7766662920085422\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "C1OoO7eYxWv9",
        "outputId": "0becac53-411f-4f57-cef3-66f438f562a0"
      },
      "source": [
        "print(classification_report(y_test,knn_pred))\n"
      ],
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.48      0.17      0.25      3922\n",
            "           1       0.80      0.95      0.87     13872\n",
            "\n",
            "    accuracy                           0.78     17794\n",
            "   macro avg       0.64      0.56      0.56     17794\n",
            "weighted avg       0.73      0.78      0.73     17794\n",
            "\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "j5tes171xWv_",
        "outputId": "0afe7c6b-e793-4665-8a46-342a02ce3261"
      },
      "source": [
        "print(confusion_matrix(y_test, knn_pred))\n"
      ],
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[  672  3250]\n",
            " [  724 13148]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 520
        },
        "id": "RZyuPbQexWv_",
        "outputId": "d15aae25-604a-4460-a976-88b864231ff2"
      },
      "source": [
        "plt.figure(figsize=(9,9))\n",
        "sns.heatmap(confusion_matrix(y_test, knn_pred), annot=True, fmt=\".3f\", linewidths=.5, square = True, cmap = 'Blues_r');\n",
        "plt.ylabel('Actual label');\n",
        "plt.xlabel('Predicted label');\n",
        "all_sample_title = 'Accuracy Score: {0}'.format(log.score(X_test, y_test))\n",
        "plt.title(all_sample_title, size = 15);"
      ],
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 648x648 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "9e2sx4KlljhM"
      },
      "source": [
        "##Decision Tree Model"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "htICeXt7lmzG",
        "outputId": "7234515d-8962-4f52-b755-024be5e8a2b7"
      },
      "source": [
        "from sklearn.tree import DecisionTreeClassifier\n",
        "\n",
        "clf = DecisionTreeClassifier()\n",
        "clf.fit(X_train, y_train)\n",
        "predict = clf.predict(X_test)\n",
        "print(\"Accuracy:\",metrics.accuracy_score(y_test, predict))"
      ],
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Accuracy: 0.7549173878835562\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 725
        },
        "id": "vWt_2c_41Pp5",
        "outputId": "ae4af99c-fcc9-4615-c115-dd453a7a38a2"
      },
      "source": [
        "correlation_matrix = df.corr().round(2)\n",
        "#A correlation matrix is a table showing correlation coefficients between variables.\n",
        "\n",
        "plt.figure(figsize=(20,10))\n",
        "\n",
        "\n",
        "# annot = True to print the values inside the square\n",
        "sns.heatmap(data=correlation_matrix , annot = True )"
      ],
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f9070ffb590>"
            ]
          },
          "metadata": {},
          "execution_count": 46
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x720 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2AEceEanqnXR"
      },
      "source": [
        "**Conclusion** The KNN model and the Logistic Regression model agev us the same results - an accuracy score of 79%, while the decision tree offers even a slightly lower accuracy - 0.75. We should probably use The KNN or Logistic Regression model for more accurate predictions in this case."
      ]
    }
  ]
}
